{"ast":null,"code":"import { RESTAURANTS_RECEIVED, FILTER_RESTAURANTS, SORT_BY } from '../actions';\nconst initialState = {\n  citySelected: \"Toronto\",\n  restaurants: [],\n  shownRestaurants: [],\n  isLoadedRestaurants: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RESTAURANTS_RECEIVED:\n      return { ...state,\n        isLoadedRestaurants: true,\n        restaurants: action.restaurants,\n        shownRestaurants: action.restaurants\n      };\n\n    case FILTER_RESTAURANTS:\n      return { ...state,\n        shownRestaurants: state.restaurants.filter(restaurant => restaurant.name.toLowerCase().includes(action.value.toLowerCase()))\n      };\n\n    case SORT_BY:\n      if (action.value === 'alphabetical') {\n        return { ...state,\n          shownRestaurants: [...state.shownRestaurants].sort((a, b) => a.name.localeCompare(b.name))\n        };\n      }\n\n      return { ...state,\n        shownRestaurants: [...state.shownRestaurants].sort((a, b) => a.age - b.age)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/yangko_2/dev/React-Redux-App/yangko-react-restaurant-list/src/reducers/reducer.js"],"names":["RESTAURANTS_RECEIVED","FILTER_RESTAURANTS","SORT_BY","initialState","citySelected","restaurants","shownRestaurants","isLoadedRestaurants","reducer","state","action","type","filter","restaurant","name","toLowerCase","includes","value","sort","a","b","localeCompare","age"],"mappings":"AAAA,SACEA,oBADF,EAEEC,kBAFF,EAGEC,OAHF,QAIO,YAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,SADK;AAEnBC,EAAAA,WAAW,EAAE,EAFM;AAGnBC,EAAAA,gBAAgB,EAAE,EAHC;AAInBC,EAAAA,mBAAmB,EAAE;AAJF,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAEhD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKX,oBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,mBAAmB,EAAE,IAFhB;AAGLF,QAAAA,WAAW,EAAEK,MAAM,CAACL,WAHf;AAILC,QAAAA,gBAAgB,EAAEI,MAAM,CAACL;AAJpB,OAAP;;AAOF,SAAKJ,kBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,gBAAgB,EAAEG,KAAK,CAACJ,WAAN,CAAkBO,MAAlB,CAAyBC,UAAU,IACnDA,UAAU,CAACC,IAAX,CAAgBC,WAAhB,GAA8BC,QAA9B,CAAwCN,MAAM,CAACO,KAAR,CAAeF,WAAf,EAAvC,CADgB;AAFb,OAAP;;AAOF,SAAKb,OAAL;AACE,UAAIQ,MAAM,CAACO,KAAP,KAAiB,cAArB,EAAqC;AACnC,eAAO,EACL,GAAGR,KADE;AAELH,UAAAA,gBAAgB,EAAE,CAAC,GAAGG,KAAK,CAACH,gBAAV,EAA4BY,IAA5B,CAAiC,CAACC,CAAD,EAAIC,CAAJ,KACjDD,CAAC,CAACL,IAAF,CAAOO,aAAP,CAAqBD,CAAC,CAACN,IAAvB,CADgB;AAFb,SAAP;AAMD;;AAED,aAAO,EACL,GAAGL,KADE;AAELH,QAAAA,gBAAgB,EAAE,CAAC,GAAGG,KAAK,CAACH,gBAAV,EAA4BY,IAA5B,CAAiC,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACG,GAAF,GAAQF,CAAC,CAACE,GAArD;AAFb,OAAP;;AAKF;AACE,aAAOb,KAAP;AAlCJ;AAoCD,CAtCD;;AAwCA,eAAeD,OAAf","sourcesContent":["import {  \r\n  RESTAURANTS_RECEIVED,\r\n  FILTER_RESTAURANTS,\r\n  SORT_BY,\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  citySelected: \"Toronto\",\r\n  restaurants: [],\r\n  shownRestaurants: [],\r\n  isLoadedRestaurants: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    \r\n    case RESTAURANTS_RECEIVED:\r\n      return {\r\n        ...state,\r\n        isLoadedRestaurants: true,\r\n        restaurants: action.restaurants,\r\n        shownRestaurants: action.restaurants,\r\n      };\r\n  \r\n    case FILTER_RESTAURANTS:\r\n      return {\r\n        ...state,\r\n        shownRestaurants: state.restaurants.filter(restaurant => (\r\n          restaurant.name.toLowerCase().includes((action.value).toLowerCase())\r\n        )),\r\n      };\r\n\r\n    case SORT_BY:\r\n      if (action.value === 'alphabetical') {\r\n        return {\r\n          ...state,\r\n          shownRestaurants: [...state.shownRestaurants].sort((a, b) => (\r\n            a.name.localeCompare(b.name)\r\n          )),\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        shownRestaurants: [...state.shownRestaurants].sort((a, b) => a.age - b.age),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}