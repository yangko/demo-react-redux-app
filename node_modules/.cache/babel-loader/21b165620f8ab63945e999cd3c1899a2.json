{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yangko_2\\\\dev\\\\React-Redux-App\\\\yangko-react-restaurant-list\\\\src\\\\components\\\\Filter\\\\Filter.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loadRestaurants, filterBy, sortBy } from '../../actions';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport './Filter.css';\nconst theme = createMuiTheme({\n  overrides: {\n    // Style sheet name ⚛️\n    MuiInputBase: {\n      // Name of the rule\n      input: {\n        color: 'black',\n        height: '1.32em'\n      }\n    },\n    MuiFormControl: {\n      marginNormal: {\n        marginTop: 0,\n        marginBttom: 0\n      }\n    }\n  }\n});\n\nclass Filter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelectCity = (event, values) => {\n      this.setState({\n        citySelected: values\n      }, () => {\n        // Update State With Redux\n        const {\n          loadRestaurantsByValue\n        } = this.props;\n        loadRestaurantsByValue(this.state.citySelected);\n      });\n    };\n\n    this.handleInputValue = event => {\n      const {\n        value\n      } = event.target;\n      const {\n        filterByValue,\n        sortByValue\n      } = this.props;\n      const {\n        selectValue\n      } = this.state;\n      this.setState({\n        inputValue: value\n      });\n      filterByValue(value);\n      sortByValue(selectValue);\n    };\n\n    this.handleSelect = event => {\n      const {\n        value\n      } = event.target;\n      const {\n        sortByValue\n      } = this.props;\n      this.setState({\n        selectValue: value\n      });\n      sortByValue(value);\n    };\n\n    this.state = {\n      citySelected: \"Toronto\",\n      cities: [],\n      isLoaded: false,\n      inputValue: '',\n      selectValue: ''\n    };\n    this.handleSelectCity = this.handleSelectCity.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://opentable.herokuapp.com/api/cities').then(res => res.json()).then(data => {\n      this.setState({\n        cities: data.cities,\n        isLoaded: true\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    const {\n      isLoaded,\n      citySelected,\n      inputValue,\n      selectValue\n    } = this.state; //const { classes } = this.props;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filter-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 14\n        }\n      }, \" Loading ... \");\n    } else {\n      let cities = this.state.cities;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filter-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Autocomplete, {\n        disableClearable: true,\n        style: {\n          width: '300px',\n          height: '58px',\n          backgroundColor: 'white',\n          marginTop: '15px',\n          paddingTop: 0\n        },\n        onChange: this.handleSelectCity,\n        options: cities,\n        renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n          className: \"field filter-field without-padding\",\n          placeholder: citySelected,\n          margin: \"normal\",\n          variant: \"outlined\",\n          InputProps: { ...params.InputProps,\n            type: 'search'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"field filter-field without-padding\",\n        placeholder: \"Filter\",\n        value: inputValue,\n        onChange: this.handleInputValue,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"field sort-field\",\n        value: selectValue,\n        onChange: this.handleSelect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        className: \"sort-field__option\",\n        disabled: true,\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }, \"Sort by\"), /*#__PURE__*/React.createElement(\"option\", {\n        className: \"sort-field__option\",\n        value: \"age\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, \"Newest\"), /*#__PURE__*/React.createElement(\"option\", {\n        className: \"sort-field__option\",\n        value: \"alphabetical\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }, \"Alphabetical\")));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  citySelected: state.citySelected,\n  isLoaded: state.isLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadRestaurantsByValue: value => dispatch(loadRestaurants(value)),\n  filterByValue: value => dispatch(filterBy(value)),\n  sortByValue: value => dispatch(sortBy(value))\n});\n\nFilter.propTypes = {\n  loadRestaurantsByValue: PropTypes.func.isRequired,\n  filterByValue: PropTypes.func.isRequired,\n  sortByValue: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","map":{"version":3,"sources":["C:/Users/yangko_2/dev/React-Redux-App/yangko-react-restaurant-list/src/components/Filter/Filter.js"],"names":["React","PropTypes","connect","loadRestaurants","filterBy","sortBy","createMuiTheme","ThemeProvider","TextField","Autocomplete","theme","overrides","MuiInputBase","input","color","height","MuiFormControl","marginNormal","marginTop","marginBttom","Filter","Component","constructor","props","handleSelectCity","event","values","setState","citySelected","loadRestaurantsByValue","state","handleInputValue","value","target","filterByValue","sortByValue","selectValue","inputValue","handleSelect","cities","isLoaded","bind","componentDidMount","fetch","then","res","json","data","catch","console","log","render","width","backgroundColor","paddingTop","params","InputProps","type","mapStateToProps","mapDispatchToProps","dispatch","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { loadRestaurants, filterBy, sortBy } from '../../actions';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport './Filter.css';\r\n\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    // Style sheet name ⚛️\r\n    MuiInputBase: {\r\n      // Name of the rule\r\n      input: {\r\n        color: 'black',\r\n        height: '1.32em',\r\n      },\r\n    },\r\n    MuiFormControl: {\r\n      marginNormal: {\r\n        marginTop: 0,\r\n        marginBttom: 0,\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nclass Filter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      citySelected: \"Toronto\",\r\n      cities: [],\r\n      isLoaded: false,\r\n      inputValue: '',\r\n      selectValue: '',\r\n    };\r\n    this.handleSelectCity = this.handleSelectCity.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://opentable.herokuapp.com/api/cities')\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n        this.setState({ cities: data.cities, isLoaded: true, })\r\n    })\r\n    .catch(console.log);\r\n  }\r\n\r\n  handleSelectCity = (event, values) => {\r\n    this.setState({\r\n      citySelected: values,\r\n    }, () => {\r\n      // Update State With Redux\r\n      const { loadRestaurantsByValue } = this.props;\r\n      \r\n      loadRestaurantsByValue(this.state.citySelected);\r\n    });\r\n  }\r\n\r\n  handleInputValue = (event) => {\r\n    const { value } = event.target;\r\n    const { filterByValue, sortByValue } = this.props;\r\n    const { selectValue } = this.state;\r\n\r\n    this.setState({ inputValue: value });\r\n\r\n    filterByValue(value);\r\n    sortByValue(selectValue);\r\n  };\r\n\r\n  handleSelect = (event) => {\r\n    const { value } = event.target;\r\n    const { sortByValue } = this.props;\r\n\r\n    this.setState({ selectValue: value });\r\n\r\n    sortByValue(value);\r\n  }\r\n\r\n  render() {\r\n    const { isLoaded, citySelected, inputValue, selectValue } = this.state;\r\n    //const { classes } = this.props;\r\n\r\n    if ( !isLoaded) {\r\n      return <div className=\"filter-wrap\"> Loading ... </div>;\r\n    } else {\r\n      let cities = this.state.cities;\r\n\r\n      return (\r\n        <div className=\"filter-wrap\">\r\n          <ThemeProvider theme={theme}>\r\n            <Autocomplete\r\n              disableClearable\r\n              style={{\r\n                width: '300px',\r\n                height: '58px',\r\n                backgroundColor: 'white',\r\n                marginTop: '15px',\r\n                paddingTop: 0,\r\n              }}\r\n              onChange={this.handleSelectCity}\r\n              options={cities}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    className=\"field filter-field without-padding\"\r\n                    placeholder={citySelected}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    InputProps={{ ...params.InputProps, type: 'search', }}\r\n                />\r\n              )}\r\n            />\r\n          </ThemeProvider>\r\n          <input\r\n            className=\"field filter-field without-padding\"\r\n            placeholder=\"Filter\"\r\n            value={inputValue}\r\n            onChange={this.handleInputValue}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n          />\r\n          <select\r\n            className=\"field sort-field\"\r\n            value={selectValue}\r\n            onChange={this.handleSelect}\r\n          >\r\n            <option\r\n              className=\"sort-field__option\"\r\n              disabled\r\n              value=\"\"\r\n            >\r\n              Sort by\r\n            </option>\r\n            <option className=\"sort-field__option\" value=\"age\">Newest</option>\r\n            <option\r\n              className=\"sort-field__option\"\r\n              value=\"alphabetical\"\r\n            >\r\n              Alphabetical\r\n            </option>\r\n          </select>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  citySelected: state.citySelected,\r\n  isLoaded: state.isLoaded,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadRestaurantsByValue: value => dispatch(loadRestaurants(value)),\r\n  filterByValue: value => dispatch(filterBy(value)),\r\n  sortByValue: value => dispatch(sortBy(value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n  loadRestaurantsByValue: PropTypes.func.isRequired,\r\n  filterByValue: PropTypes.func.isRequired,\r\n  sortByValue: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);"]},"metadata":{},"sourceType":"module"}