{"ast":null,"code":"export const RESTAURANTS_RECEIVED = 'RESTAURANTS_RECEIVED';\nexport const ADD_TO_BASKET = 'ADD_TO_BASKET';\nexport const BASKET_ITEM_INCREASED = 'BASKET_ITEM_INCREASED';\nexport const BASKET_ITEM_DECREASED = 'BASKET_ITEM_DECREASED';\nexport const BASKET_ITEM_REMOVED = 'BASKET_ITEM_REMOVED';\nexport const LIST_RESTAURANTS = 'LIST_RESTAURANTS';\nexport const FILTER_RESTAURANTS = 'FILTER_RESTAURANTS';\nexport const SORT_BY = 'SORT_BY';\nexport const loadRestaurants = citySelected => dispatch => {\n  let cityName = citySelected ? citySelected : \"Toronto\";\n  console.log('cityName= ' + cityName);\n  const endpoint = `https://opentable.herokuapp.com/api/restaurants?city=${cityName}`;\n  fetch(endpoint).then(res => res.json()).then(data => {\n    let restaurants = data.restaurants;\n    dispatch(receiveRestaurants(restaurants));\n  }).catch(console.log);\n};\nexport const receiveRestaurants = restaurants => ({\n  type: RESTAURANTS_RECEIVED,\n  restaurants\n});\nexport const addToBasket = restaurantName => ({\n  type: ADD_TO_BASKET,\n  restaurantName\n});\nexport const increaseBasketItem = restaurantName => ({\n  type: BASKET_ITEM_INCREASED,\n  restaurantName\n});\nexport const decreaseBasketItem = restaurantName => ({\n  type: BASKET_ITEM_DECREASED,\n  restaurantName\n});\nexport const removeBasketItem = restaurantName => ({\n  type: BASKET_ITEM_REMOVED,\n  restaurantName\n});\nexport const listRestaurantsBy = citySelected => ({\n  type: LIST_RESTAURANTS,\n  citySelected\n});\nexport const filterBy = value => ({\n  type: FILTER_RESTAURANTS,\n  value\n});\nexport const sortBy = value => ({\n  type: SORT_BY,\n  value\n});","map":{"version":3,"sources":["C:/Users/yangko_2/dev/React-Redux-App/yangko-react-restaurant-list/src/actions/index.js"],"names":["RESTAURANTS_RECEIVED","ADD_TO_BASKET","BASKET_ITEM_INCREASED","BASKET_ITEM_DECREASED","BASKET_ITEM_REMOVED","LIST_RESTAURANTS","FILTER_RESTAURANTS","SORT_BY","loadRestaurants","citySelected","dispatch","cityName","console","log","endpoint","fetch","then","res","json","data","restaurants","receiveRestaurants","catch","type","addToBasket","restaurantName","increaseBasketItem","decreaseBasketItem","removeBasketItem","listRestaurantsBy","filterBy","value","sortBy"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAEP,OAAO,MAAMC,eAAe,GAAGC,YAAY,IAAKC,QAAD,IAAc;AAC3D,MAAIC,QAAQ,GAAGF,YAAY,GAAGA,YAAH,GAAkB,SAA7C;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeF,QAA3B;AACA,QAAMG,QAAQ,GAAI,wDAAuDH,QAAS,EAAlF;AACAI,EAAAA,KAAK,CAACD,QAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,QAAIC,WAAW,GAAGD,IAAI,CAACC,WAAvB;AACAV,IAAAA,QAAQ,CAACW,kBAAkB,CAACD,WAAD,CAAnB,CAAR;AACD,GALH,EAMGE,KANH,CAMSV,OAAO,CAACC,GANjB;AAOD,CAXM;AAaP,OAAO,MAAMQ,kBAAkB,GAAGD,WAAW,KAAK;AAChDG,EAAAA,IAAI,EAAEvB,oBAD0C;AAEhDoB,EAAAA;AAFgD,CAAL,CAAtC;AAKP,OAAO,MAAMI,WAAW,GAAGC,cAAc,KAAK;AAC5CF,EAAAA,IAAI,EAAEtB,aADsC;AAE5CwB,EAAAA;AAF4C,CAAL,CAAlC;AAKP,OAAO,MAAMC,kBAAkB,GAAGD,cAAc,KAAK;AACnDF,EAAAA,IAAI,EAAErB,qBAD6C;AAEnDuB,EAAAA;AAFmD,CAAL,CAAzC;AAKP,OAAO,MAAME,kBAAkB,GAAGF,cAAc,KAAK;AACnDF,EAAAA,IAAI,EAAEpB,qBAD6C;AAEnDsB,EAAAA;AAFmD,CAAL,CAAzC;AAKP,OAAO,MAAMG,gBAAgB,GAAGH,cAAc,KAAK;AACjDF,EAAAA,IAAI,EAAEnB,mBAD2C;AAEjDqB,EAAAA;AAFiD,CAAL,CAAvC;AAKP,OAAO,MAAMI,iBAAiB,GAAGpB,YAAY,KAAK;AAChDc,EAAAA,IAAI,EAAElB,gBAD0C;AAEhDI,EAAAA;AAFgD,CAAL,CAAtC;AAKP,OAAO,MAAMqB,QAAQ,GAAGC,KAAK,KAAK;AAChCR,EAAAA,IAAI,EAAEjB,kBAD0B;AAEhCyB,EAAAA;AAFgC,CAAL,CAAtB;AAKP,OAAO,MAAMC,MAAM,GAAGD,KAAK,KAAK;AAC9BR,EAAAA,IAAI,EAAEhB,OADwB;AAE9BwB,EAAAA;AAF8B,CAAL,CAApB","sourcesContent":["export const RESTAURANTS_RECEIVED = 'RESTAURANTS_RECEIVED';\r\nexport const ADD_TO_BASKET = 'ADD_TO_BASKET';\r\nexport const BASKET_ITEM_INCREASED = 'BASKET_ITEM_INCREASED';\r\nexport const BASKET_ITEM_DECREASED = 'BASKET_ITEM_DECREASED';\r\nexport const BASKET_ITEM_REMOVED = 'BASKET_ITEM_REMOVED';\r\nexport const LIST_RESTAURANTS = 'LIST_RESTAURANTS';\r\nexport const FILTER_RESTAURANTS = 'FILTER_RESTAURANTS';\r\nexport const SORT_BY = 'SORT_BY';\r\n\r\nexport const loadRestaurants = citySelected => (dispatch) => {\r\n  let cityName = citySelected ? citySelected : \"Toronto\";\r\n  console.log('cityName= ' + cityName);\r\n  const endpoint = `https://opentable.herokuapp.com/api/restaurants?city=${cityName}`;\r\n  fetch(endpoint)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      let restaurants = data.restaurants;\r\n      dispatch(receiveRestaurants(restaurants))\r\n    })\r\n    .catch(console.log);\r\n};\r\n\r\nexport const receiveRestaurants = restaurants => ({\r\n  type: RESTAURANTS_RECEIVED,\r\n  restaurants,\r\n});\r\n\r\nexport const addToBasket = restaurantName => ({\r\n  type: ADD_TO_BASKET,\r\n  restaurantName,\r\n});\r\n\r\nexport const increaseBasketItem = restaurantName => ({\r\n  type: BASKET_ITEM_INCREASED,\r\n  restaurantName,\r\n});\r\n\r\nexport const decreaseBasketItem = restaurantName => ({\r\n  type: BASKET_ITEM_DECREASED,\r\n  restaurantName,\r\n});\r\n\r\nexport const removeBasketItem = restaurantName => ({\r\n  type: BASKET_ITEM_REMOVED,\r\n  restaurantName,\r\n});\r\n\r\nexport const listRestaurantsBy = citySelected => ({\r\n  type: LIST_RESTAURANTS,\r\n  citySelected\r\n});\r\n\r\nexport const filterBy = value => ({\r\n  type: FILTER_RESTAURANTS,\r\n  value,\r\n});\r\n\r\nexport const sortBy = value => ({\r\n  type: SORT_BY,\r\n  value,\r\n});"]},"metadata":{},"sourceType":"module"}