{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yangko_2\\\\dev\\\\React-Redux-App\\\\yangko-react-restaurant-list\\\\src\\\\components\\\\RestaurantList\\\\RestaurantList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport StarIcon from '@material-ui/icons/StarBorder';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport './RestaurantList.css';\nconst styles = {\n  fullHeightCard: {\n    height: \"100%\"\n  }\n};\n\nconst renderSwitch = price => {\n  switch (price) {\n    case 0:\n      return \"\";\n\n    case 1:\n      return \"$\";\n\n    case 2:\n      return \"$$\";\n\n    case 3:\n      return \"$$$\";\n\n    case 4:\n      return \"$$$$\";\n\n    case 5:\n      return \"$$$$$\";\n\n    default:\n      return \"\";\n  }\n};\n\nconst RestaurantList = ({\n  restaurants\n}) => /*#__PURE__*/React.createElement(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(Container, {\n  maxWidth: \"md\",\n  component: \"main\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(Grid, {\n  container: true,\n  spacing: 5,\n  alignItems: \"flex-end\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }\n}, restaurants.map(restaurant =>\n/*#__PURE__*/\n// Enterprise card is full width at sm breakpoint\nReact.createElement(Grid, {\n  item: true,\n  key: restaurant.name,\n  id: restaurant.id,\n  xs: 12,\n  sm: restaurant.name === 'Enterprise' ? 12 : 6,\n  md: 4,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(Card, {\n  className: \"fullHeightCard\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 15\n  }\n}, /*#__PURE__*/React.createElement(CardActionArea, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(CardContent, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 19\n  }\n}, /*#__PURE__*/React.createElement(Typography, {\n  gutterBottom: true,\n  variant: \"h5\",\n  component: \"h2\",\n  align: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 21\n  }\n}, restaurant.name), /*#__PURE__*/React.createElement(Typography, {\n  variant: \"body2\",\n  component: \"p\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 21\n  }\n}, \"Address: \", restaurant.address), /*#__PURE__*/React.createElement(Typography, {\n  variant: \"body2\",\n  component: \"p\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 21\n  }\n}, \"City: \", restaurant.city), /*#__PURE__*/React.createElement(Typography, {\n  variant: \"body2\",\n  component: \"p\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 21\n  }\n}, \"Area: \", restaurant.area), /*#__PURE__*/React.createElement(Typography, {\n  variant: \"body2\",\n  component: \"p\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 21\n  }\n}, \"Tel: \", restaurant.phone), /*#__PURE__*/React.createElement(Typography, {\n  variant: \"body2\",\n  component: \"p\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 21\n  }\n}, \"Price: $$$$\")), /*#__PURE__*/React.createElement(CardMedia, {\n  className: \"media\",\n  style: {\n    width: 'auto',\n    height: '180px'\n  },\n  image: restaurant.image_url,\n  title: restaurant.name,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 19\n  }\n})), /*#__PURE__*/React.createElement(CardActions, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"buttonAlignCenter\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 19\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  variant: \"outlined\",\n  color: \"primary\",\n  href: restaurant.reserve_url,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 21\n  }\n}, \"Reserve Table\")))))))));\n\nconst mapStateToProps = state => ({\n  cities: state.cities,\n  restaurants: state.shownRestaurants\n});\n\nRestaurantList.propTypes = {\n  restaurants: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addRestaurantToBasket: PropTypes.func.isRequired\n}; //export default connect(mapStateToProps)(RestaurantList);\n\nexport default compose(withStyles(styles, {\n  name: 'RestaurantList'\n}), connect(mapStateToProps))(RestaurantList);","map":{"version":3,"sources":["C:/Users/yangko_2/dev/React-Redux-App/yangko-react-restaurant-list/src/components/RestaurantList/RestaurantList.js"],"names":["React","PropTypes","connect","compose","Card","CardActionArea","CardActions","CardContent","CardHeader","CssBaseline","Grid","StarIcon","Typography","Container","CardMedia","Button","withStyles","styles","fullHeightCard","height","renderSwitch","price","RestaurantList","restaurants","map","restaurant","name","id","address","city","area","phone","width","image_url","reserve_url","mapStateToProps","state","cities","shownRestaurants","propTypes","arrayOf","object","isRequired","addRestaurantToBasket","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport StarIcon from '@material-ui/icons/StarBorder';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\"\r\nimport './RestaurantList.css';\r\n\r\nconst styles = {\r\n  fullHeightCard: {\r\n    height: \"100%\",\r\n  },\r\n}\r\n\r\nconst renderSwitch = (price) => {\r\n  switch (price) {\r\n    case 0:\r\n      return \"\";\r\n    case 1:\r\n      return \"$\";\r\n    case 2:\r\n      return \"$$\";\r\n    case 3:\r\n      return \"$$$\";\r\n    case 4:\r\n      return \"$$$$\";\r\n    case 5:\r\n      return \"$$$$$\";\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n\r\nconst RestaurantList = ({ restaurants }) => (\r\n\r\n\t<React.Fragment>\r\n\t<Container maxWidth=\"md\" component=\"main\">\r\n        <Grid container spacing={5} alignItems=\"flex-end\">\r\n          {restaurants.map((restaurant) => (\r\n            // Enterprise card is full width at sm breakpoint\r\n            <Grid item key={restaurant.name} id={restaurant.id} xs={12} sm={restaurant.name === 'Enterprise' ? 12 : 6} md={4}>\r\n              <Card className=\"fullHeightCard\">\r\n                <CardActionArea>\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" align=\"center\">\r\n                      {restaurant.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                      Address: {restaurant.address}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                      City: {restaurant.city}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                      Area: {restaurant.area}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                      Tel: {restaurant.phone}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                      Price: $$$$\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardMedia\r\n                    className=\"media\"\r\n                    style={{\r\n                      width: 'auto',\r\n                      height: '180px',\r\n                    }}\r\n                    image={restaurant.image_url}\r\n                    title={restaurant.name}\r\n                  />\r\n                </CardActionArea>\r\n                <CardActions>\r\n                  <div className=\"buttonAlignCenter\">\r\n                    <Button variant=\"outlined\" color=\"primary\" href={restaurant.reserve_url}>\r\n                      Reserve Table\r\n                    </Button>\r\n                  </div>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n\r\n\t  </React.Fragment>\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n  cities: state.cities,\r\n  restaurants: state.shownRestaurants,\r\n});\r\n\r\nRestaurantList.propTypes = {\r\n\trestaurants: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n\taddRestaurantToBasket: PropTypes.func.isRequired,\r\n};\r\n\r\n//export default connect(mapStateToProps)(RestaurantList);\r\nexport default compose(\r\n  withStyles(styles, {\r\n    name: 'RestaurantList',\r\n  }),\r\n  connect(mapStateToProps),\r\n)(RestaurantList);"]},"metadata":{},"sourceType":"module"}