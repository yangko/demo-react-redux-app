{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yangko_2\\\\dev\\\\React-Redux-App\\\\yangko-react-restaurant-list\\\\src\\\\components\\\\BodyComponent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { loadRestaurants } from '../actions';\nimport Filter from './Filter/Filter';\nimport RestaurantList from './RestaurantList/RestaurantList';\nimport Loader from './Loader/Loader';\nimport './BodyComponent.css';\nimport './Filter/Filter.css';\n\nconst HeroContent = () => /*#__PURE__*/React.createElement(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Container, {\n  maxWidth: \"lg\",\n  component: \"main\",\n  className: \"heroContent\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Typography, {\n  component: \"h1\",\n  variant: \"h3\",\n  align: \"center\",\n  color: \"textPrimary\",\n  gutterBottom: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Typography, {\n  variant: \"h4\",\n  align: \"center\",\n  color: \"textSecondary\",\n  component: \"p\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }\n}, \"A Demo of SPA (Single Page Application)\"), /*#__PURE__*/React.createElement(Typography, {\n  variant: \"h5\",\n  align: \"center\",\n  color: \"textSecondary\",\n  component: \"p\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }\n}, \"Search restaurants in worldwide cities, filtering and sorting features enabled. Using RESTful API, Redux store, Webpack and Material-UI.\")));\n\nclass BodyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      citySelected: \"Toronto\",\n      citis: [],\n      restaurants: [],\n      isLoaded: false\n    };\n  }\n\n  async componentDidMount() {\n    this.props.payLoad(); // Default City = Toronto\n  }\n\n  render() {\n    const {\n      isLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(HeroContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Filter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), isLoaded ? /*#__PURE__*/React.createElement(RestaurantList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLoaded: state.isLoadedRestaurants\n});\n\nconst mapDispatchToProps = dispatch => ({\n  payLoad: () => dispatch(loadRestaurants())\n});\n\nBodyComponent.propTypes = {\n  isLoaded: PropTypes.bool.isRequired,\n  payLoad: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BodyComponent);","map":{"version":3,"sources":["C:/Users/yangko_2/dev/React-Redux-App/yangko-react-restaurant-list/src/components/BodyComponent.js"],"names":["React","PropTypes","connect","Typography","Container","loadRestaurants","Filter","RestaurantList","Loader","HeroContent","BodyComponent","Component","constructor","props","state","citySelected","citis","restaurants","isLoaded","componentDidMount","payLoad","render","mapStateToProps","isLoadedRestaurants","mapDispatchToProps","dispatch","propTypes","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { loadRestaurants } from '../actions';\r\nimport Filter from './Filter/Filter';\r\nimport RestaurantList from './RestaurantList/RestaurantList';\r\nimport Loader from './Loader/Loader';\r\nimport './BodyComponent.css';\r\nimport './Filter/Filter.css';\r\n\r\nconst HeroContent = () => (\r\n  <React.Fragment>\r\n    <Container maxWidth=\"lg\" component=\"main\" className=\"heroContent\">\r\n      <Typography component=\"h1\" variant=\"h3\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n      </Typography>\r\n      <Typography variant=\"h4\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n        A Demo of SPA (Single Page Application)\r\n      </Typography>\r\n      <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n        Search restaurants in worldwide cities, filtering and sorting features enabled. Using RESTful API, Redux store, Webpack and Material-UI.\r\n      </Typography>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nclass BodyComponent extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      citySelected: \"Toronto\",\r\n      citis: [],\r\n      restaurants: [],\r\n      isLoaded: false,\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    this.props.payLoad(); // Default City = Toronto\r\n  }\r\n\r\n  render() {\r\n    const { isLoaded } = this.props;\r\n    return (\r\n      <div>\r\n        <HeroContent />\r\n        <Filter />\r\n        { isLoaded\r\n          ? \r\n          <RestaurantList />\r\n          : <Loader />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoaded: state.isLoadedRestaurants,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  payLoad: () => dispatch(loadRestaurants()),\r\n});\r\n\r\nBodyComponent.propTypes = {\r\n  isLoaded: PropTypes.bool.isRequired,\r\n  payLoad: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BodyComponent);"]},"metadata":{},"sourceType":"module"}